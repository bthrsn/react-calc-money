{"version":3,"sources":["components/total/Total.js","components/history/HistoryItem.js","components/history/History.js","components/operation/Operation.js","App.js","index.js"],"names":["Total","resultExpenses","resultIncome","totalBalance","className","HistoryItem","transaction","delTransaction","add","description","amount","onClick","id","History","transactions","map","item","key","Operation","addTransaction","addDescription","addAmount","type","placeholder","onChange","value","App","state","JSON","parse","localStorage","getItem","Date","toString","parseFloat","push","setState","getTotalBalance","e","target","getIncome","filter","reduce","acc","getExpenses","this","addStorage","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e2da5c1.chunk.js","sourcesContent":["import React from \"react\";\r\n// Реализовать функционал\r\n// написать функции которые считают расходы, доходы и остаток средств\r\n// Пишем эти функции в App.js\r\n// можно перебирать массив transaction с помощью reduce и выводить его\r\n\r\nconst Total = ({ resultExpenses, resultIncome, totalBalance }) => {\r\n  return (\r\n    <section className=\"total\">\r\n      <header className=\"total__header\">\r\n        <h3> Баланс </h3> <p className=\"total__balance\"> {totalBalance} ₽</p>{\" \"}\r\n      </header>{\" \"}\r\n      <div className=\"total__main\">\r\n        <div className=\"total__main-item total__income\">\r\n          <h4> Доходы </h4>{\" \"}\r\n          <p className=\"total__money total__money-income\"> {resultIncome} ₽</p>{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"total__main-item total__expenses\">\r\n          <h4> Расходы </h4>{\" \"}\r\n          <p className=\"total__money total__money-expenses\"> {resultExpenses} ₽</p>{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </section>\r\n  );\r\n};\r\nexport default Total;\r\n","import React from \"react\";\r\n\r\nconst HistoryItem = ({ transaction, delTransaction }) => (\r\n  <li \r\n  className={`history__item ${transaction.add  ?\r\n  'history__item-plus' :\r\n  'history__item-minus'}`}>\r\n    {transaction.description}\r\n    <span className=\"history__money\">{transaction.amount}₽ </span>{\" \"}\r\n    <button className=\"history__delete\" onClick={() => delTransaction(transaction.id)}> x </button>\r\n  </li>\r\n);\r\n\r\nexport default HistoryItem;\r\n","import React from \"react\";\r\nimport HistoryItem from \"./HistoryItem\";\r\n\r\nconst History = ({ transactions, delTransaction }) => {\r\n  return (\r\n    <section className=\"history\">\r\n      <h3>История операций</h3>\r\n      <ul className=\"history__list\">\r\n        {transactions.map(item => <HistoryItem \r\n        key={item.id} \r\n        transaction ={item}\r\n        delTransaction={delTransaction}\r\n        />)}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\n\r\nconst Operation = ({ addTransaction, addDescription, addAmount, description, amount }) => {\r\n  return (\r\n    <section className=\"operation\">\r\n      <h3>Новая операция</h3>\r\n      <form id=\"form\">\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"operation__fields operation__name\"\r\n            placeholder=\"Наименование операции\"\r\n            onChange={addDescription}\r\n            value={description}\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"operation__fields operation__amount\"\r\n            placeholder=\"Введите сумму\"\r\n            onChange={addAmount}\r\n            value={amount}\r\n          />\r\n        </label>\r\n        <div className=\"operation__btns\">\r\n          <button\r\n            onClick={() => addTransaction(false)}\r\n            type=\"button\"\r\n            className=\"operation__btn operation__btn-subtract\"\r\n          >\r\n            РАСХОД\r\n          </button>\r\n          <button\r\n            onClick={() => addTransaction(true)}\r\n            type=\"button\"\r\n            className=\"operation__btn operation__btn-add\"\r\n          >\r\n            ДОХОД\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Operation;\r\n","import React, {\r\n  Component\r\n} from \"react\";\r\nimport Total from \"./components/total/Total\";\r\nimport History from \"./components/history/History\";\r\nimport Operation from \"./components/operation/Operation\";\r\n\r\nclass App extends Component {\r\n        // Для хранения данных создаем состояние\r\nstate = {\r\n    transactions: JSON.parse(localStorage.getItem('calc-money')) || [],\r\n    description: \"\",\r\n    amount: \"\",\r\n    resultExpenses: 0,\r\n    resultIncome: 0,\r\n    totalBalance: 0,\r\n  }\r\n\r\n  // Чтобы из localstorage инфа поступала в total\r\ncomponentWillMount() {\r\n  this.getTotalBalance();\r\n}\r\n// удаляем из localstorage\r\ncomponentDidUpdate() {\r\nthis.addStorage();\r\n}\r\n\r\n    // метод добавляющий транзакцию\r\n  addTransaction = (add) => {\r\n    // Создаем копию состояния, чтобы пушить изменения в transactions\r\n    const transactions = [...this.state.transactions];\r\n\r\n    // Объект для хранения изменеий\r\n    const transaction = {\r\n      // Генерация ID, можно подключить библиотеку, а можно использовать текущую дату\r\n      id: `cmr${(+new Date()).toString(16)}`,\r\n      description: this.state.description,\r\n      amount: parseFloat(this.state.amount),\r\n      add\r\n      }\r\n          // и пушим изменения\r\n          transactions.push(transaction);\r\n// Обновляем свойство transactions\r\nthis.setState({ \r\n  transactions,\r\n  // очищаем поля ввода, передавая пустые строки\r\n  description: '',\r\n  amount: '',\r\n}, this.getTotalBalance);\r\n  }\r\n\r\n  addAmount = (e) => {\r\n    this.setState({\r\n      amount: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n  addDescription = (e) => {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  // Получаем доход\r\n  getIncome = () => this.state.transactions\r\n    // Сначала фильтруем только доходы\r\n    .filter(item => item.add)\r\n    // Потом складываем их и указываем, что первое значение = 0\r\n    // Нужно два параметра в acc копиться, а item это новый доход\r\n    .reduce((acc, item) => item.amount + acc, 0)\r\n\r\n  // Получаем расходы\r\ngetExpenses = () => this.state.transactions\r\n  // В расходах инвенртируем item, нужны расходы, а не доходы\r\n  .filter(item => !item.add)\r\n  .reduce((acc, item) => item.amount + acc, 0)\r\n\r\n// Считаем итог\r\n  getTotalBalance() {\r\n    const resultIncome = this.getIncome();\r\n    const resultExpenses = this.getExpenses();\r\n\r\n    const totalBalance = resultIncome - resultExpenses;\r\n\r\n    this.setState({\r\n      resultExpenses,\r\n      resultIncome,\r\n      totalBalance,\r\n    });\r\n  }\r\n\r\n  // метод для хранения в localstorage\r\naddStorage() {\r\nlocalStorage.setItem('calc-money', JSON.stringify(this.state.transactions))\r\n}\r\n\r\n// Удаление элемента\r\ndelTransaction = (id) => {\r\n  const transactions = this.state.transactions.filter(item => item.id !== id);\r\nthis.setState({ transactions }, this.getTotalBalance);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      // React.Fragment можно не писать, отсюда пустой тег\r\n      <>\r\n        <header>\r\n          <h1> Кошелек </h1> \r\n          <h2> Калькулятор расходов </h2>\r\n        </header>\r\n        <main>\r\n          <div className=\"container\">\r\n            <Total \r\n            resultExpenses={this.state.resultExpenses}\r\n            resultIncome={this.state.resultIncome}\r\n            totalBalance={this.state.totalBalance}/>\r\n            <History \r\n            transactions={this.state.transactions}\r\n            delTransaction={this.delTransaction}/>\r\n            <Operation\r\n              addTransaction={this.addTransaction}\r\n              addAmount={this.addAmount}\r\n              addDescription={this.addDescription}\r\n              description={this.state.description}\r\n              amount={this.state.amount}\r\n            />\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./normalize.css\";\r\nimport \"./style.css\";\r\n\r\n// компоненты пишуться с большой буквы\r\n// создадим кнопку с помощью реакта, свойств(pops) не будет\r\n// const Test = () => React.createElement(\"button\", null, \"Привет!\");\r\n\r\n// кнопка на чистом jsx, обычно создается вот так, потому что весит меньше\r\n// const Test2 = () => <button>Привет!</button>;\r\n\r\n// Создадим функциональный компонент\r\n// По id в нативном js мы его найти не сможем\r\n// const Header = ({ text }) => <h1 id=\"h1\">{text}</h1>;\r\n\r\n// создаем Элемент\r\n// const Element = <p>Параграф</p>;\r\n\r\n// создаем классовый компонент\r\n// class Main extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"main\">\r\n//         <Header text={\"свойство текст\" + this.props.count} />\r\n//         {Element}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}